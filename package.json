{
  "name": "fxnjs",
  "version": "0.0.42",
  "description": "Run AI prediction functions in your JavaScript and Node.js apps.",
  "scripts": {
    "build": "npm run clean && npm run build:esm && npm run build:umd",
    "build:esm": "echo Using TypeScript && tsc --version && tsc --pretty",
    "build:umd": "npx rollup --config --bundleConfigAsCjs",
    "test": "TS_NODE_PROJECT=tsconfig.test.json npx mocha --require ts-node/register --require dotenv/config --colors --recursive --timeout 999999 test/**/*.ts",
    "clean": "rm -rf build",
    "postinstall": "node ./scripts/fxnc.mjs"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/fxnai/fxnjs.git"
  },
  "author": "NatML <hi@natml.ai> (https://natml.ai)",
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/fxnai/fxnjs/issues"
  },
  "homepage": "https://fxn.ai",
  "files": [
    "build",
    "scripts"
  ],
  "engines": {
    "node": ">=18.0.0"
  },
  "main": "build/lib/index.js",
  "typings": "build/types/index.d.ts",
  "unpkg": "build/umd/fxn.js",
  "dependencies": {
    "base64-arraybuffer": "^1.0.2",
    "chalk": "^5.3.0",
    "data-urls": "^5.0.0"
  },
  "devDependencies": {
    "@rollup/plugin-commonjs": "^25.0.2",
    "@rollup/plugin-json": "^6.0.0",
    "@rollup/plugin-node-resolve": "^15.1.0",
    "@rollup/plugin-terser": "^0.4.3",
    "@testdeck/mocha": "^0.1.2",
    "@types/chai": "^4.2.22",
    "@types/chai-as-promised": "^7.1.4",
    "@types/data-urls": "^3.0.4",
    "@types/mocha": "^9.0.0",
    "@types/sharp": "^0.29.4",
    "canvas": "^2.11.2",
    "chai": "^4.3.4",
    "chai-as-promised": "^7.1.1",
    "dotenv": "^16.0.3",
    "mocha": "^11.0.1",
    "rollup": "^3.25.1",
    "ts-node": "^10.4.0",
    "typescript": "^4.4.4",
    "webpack": "^5.65.0"
  },
  "keywords": [
    "machine learning",
    "ml",
    "deep learning",
    "computer vision",
    "vision",
    "natural language",
    "nlp",
    "opencv",
    "tensorflow",
    "pytorch",
    "onnx",
    "ai",
    "artificial intelligence",
    "llm",
    "large language model",
    "embeddings"
  ]
}
